$ cat /workspace/marketplace/package.json
{
  "name": "marketplace-monorepo",
  "version": "1.0.0",
  "description": "Production-ready e-commerce marketplace monorepo",
  "private": true,
  "workspaces": [
    "frontend",
    "backend/api-gateway",
    "backend/auth-service",
    "backend/product-service",
    "backend/order-service",
    "backend/payment-service",
    "backend/notification-service",
    "backend/shared"
  ],
  "scripts": {
    "dev": "concurrently \"npm run dev:frontend\" \"npm run dev:backend\"",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:backend": "docker-compose up",
    "build": "npm run build:frontend && npm run build:backend",
    "build:frontend": "cd frontend && npm run build",
    "build:backend": "docker-compose build",
    "test": "npm run test:frontend && npm run test:backend",
    "test:frontend": "cd frontend && npm run test",
    "test:backend": "npm run test --workspaces --if-present",
    "lint": "npm run lint:frontend && npm run lint:backend",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:backend": "npm run lint --workspaces --if-present",
    "seed": "cd backend/shared && npm run seed",
    "setup": "npm install && npm run setup:env && npm run setup:db",
    "setup:env": "node scripts/setup-env.js",
    "setup:db": "npm run db:generate && npm run db:push",
    "db:generate": "npm run db:generate --workspaces --if-present",
    "db:push": "npm run db:push --workspaces --if-present"
  },
  "devDependencies": {
    "concurrently": "^8.2.2",
    "@types/node": "^20.10.5"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  }
}$ cat /workspace/marketplace/docker-compose.yml

version: '3.8'

services:
  # Databases
  auth-db:
    image: postgres:15-alpine
    container_name: marketplace-auth-db
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - auth_db_data:/var/lib/postgresql/data
    networks:
      - marketplace-network

  product-db:
    image: postgres:15-alpine
    container_name: marketplace-product-db
    environment:
      POSTGRES_DB: product_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - product_db_data:/var/lib/postgresql/data
    networks:
      - marketplace-network

  order-db:
    image: postgres:15-alpine
    container_name: marketplace-order-db
    environment:
      POSTGRES_DB: order_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - order_db_data:/var/lib/postgresql/data
    networks:
      - marketplace-network

  payment-db:
    image: postgres:15-alpine
    container_name: marketplace-payment-db
    environment:
      POSTGRES_DB: payment_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5435:5432"
    volumes:
      - payment_db_data:/var/lib/postgresql/data
    networks:
      - marketplace-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: marketplace-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - marketplace-network

  # Microservices
  auth-service:
    build:
      context: ./backend/auth-service
      dockerfile: Dockerfile
    container_name: marketplace-auth-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://postgres:postgres@auth-db:5432/auth_db
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_REFRESH_SECRET=your-super-secret-refresh-key-change-in-production
      - REDIS_URL=redis://redis:6379
    depends_on:
      - auth-db
      - redis
    volumes:
      - ./backend/auth-service:/app
      - /app/node_modules
    networks:
      - marketplace-network

  product-service:
    build:
      context: ./backend/product-service
      dockerfile: Dockerfile
    container_name: marketplace-product-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - DATABASE_URL=postgresql://postgres:postgres@product-db:5432/product_db
      - AUTH_SERVICE_URL=http://auth-service:3001
      - REDIS_URL=redis://redis:6379
    depends_on:
      - product-db
      - auth-service
      - redis
    volumes:
      - ./backend/product-service:/app
      - /app/node_modules
    networks:
      - marketplace-network

  order-service:
    build:
      context: ./backend/order-service
      dockerfile: Dockerfile
    container_name: marketplace-order-service
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - DATABASE_URL=postgresql://postgres:postgres@order-db:5432/order_db
      - AUTH_SERVICE_URL=http://auth-service:3001
      - PRODUCT_SERVICE_URL=http://product-service:3002
      - PAYMENT_SERVICE_URL=http://payment-service:3004
      - NOTIFICATION_SERVICE_URL=http://notification-service:3005
      - REDIS_URL=redis://redis:6379
    depends_on:
      - order-db
      - auth-service
      - product-service
      - redis
    volumes:
      - ./backend/order-service:/app
      - /app/node_modules
    networks:
      - marketplace-network

  payment-service:
    build:
      context: ./backend/payment-service
      dockerfile: Dockerfile
    container_name: marketplace-payment-service
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - PORT=3004
      - DATABASE_URL=postgresql://postgres:postgres@payment-db:5432/payment_db
      - AUTH_SERVICE_URL=http://auth-service:3001
      - ORDER_SERVICE_URL=http://order-service:3003
      - STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
      - STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret
      - RAZORPAY_KEY_ID=your_razorpay_key_id
      - RAZORPAY_KEY_SECRET=your_razorpay_key_secret
      - REDIS_URL=redis://redis:6379
    depends_on:
      - payment-db
      - auth-service
      - redis
    volumes:
      - ./backend/payment-service:/app
      - /app/node_modules
    networks:
      - marketplace-network

  notification-service:
    build:
      context: ./backend/notification-service
      dockerfile: Dockerfile
    container_name: marketplace-notification-service
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - PORT=3005
      - AUTH_SERVICE_URL=http://auth-service:3001
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USER=your-email@gmail.com
      - SMTP_PASS=your-app-password
      - TWILIO_ACCOUNT_SID=your_twilio_account_sid
      - TWILIO_AUTH_TOKEN=your_twilio_auth_token
      - TWILIO_PHONE_NUMBER=+1234567890
      - REDIS_URL=redis://redis:6379
    depends_on:
      - auth-service
      - redis
    volumes:
      - ./backend/notification-service:/app
      - /app/node_modules
    networks:
      - marketplace-network

  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    container_name: marketplace-api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - AUTH_SERVICE_URL=http://auth-service:3001
      - PRODUCT_SERVICE_URL=http://product-service:3002
      - ORDER_SERVICE_URL=http://order-service:3003
      - PAYMENT_SERVICE_URL=http://payment-service:3004
      - NOTIFICATION_SERVICE_URL=http://notification-service:3005
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - REDIS_URL=redis://redis:6379
      - RATE_LIMIT_TTL=60
      - RATE_LIMIT_LIMIT=100
    depends_on:
      - auth-service
      - product-service
      - order-service
      - payment-service
      - notification-service
      - redis
    volumes:
      - ./backend/api-gateway:/app
      - /app/node_modules
    networks:
      - marketplace-network

volumes:
  auth_db_data:
  product_db_data:
  order_db_data:
  payment_db_data:
  redis_data:

networks:
  marketplace-network:
    driver: bridge$ cat /workspace/marketplace/frontend/package.json

{
  "name": "marketplace-frontend",
  "private": true,
  "version": "1.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "tsc && vite build",
    "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview",
    "test": "vitest",
    "test:ui": "vitest --ui"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.20.1",
    "@tanstack/react-query": "^5.8.4",
    "react-hook-form": "^7.48.2",
    "@hookform/resolvers": "^3.3.2",
    "zod": "^3.22.4",
    "axios": "^1.6.2",
    "framer-motion": "^10.16.5",
    "socket.io-client": "^4.7.4",
    "recharts": "^2.8.0",
    "lucide-react": "^0.294.0",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.0.0",
    "tailwind-merge": "^2.0.0",
    "@radix-ui/react-slot": "^1.0.2",
    "@radix-ui/react-dialog": "^1.0.5",
    "@radix-ui/react-dropdown-menu": "^2.0.6",
    "@radix-ui/react-label": "^2.0.2",
    "@radix-ui/react-select": "^2.0.0",
    "@radix-ui/react-separator": "^1.0.3",
    "@radix-ui/react-toast": "^1.1.5",
    "@radix-ui/react-tabs": "^1.0.4",
    "@radix-ui/react-avatar": "^1.0.4",
    "@radix-ui/react-badge": "^1.0.4",
    "@radix-ui/react-card": "^1.0.4",
    "@radix-ui/react-input": "^1.0.4",
    "@radix-ui/react-textarea": "^1.0.4"
  },
  "devDependencies": {
    "@types/react": "^18.2.37",
    "@types/react-dom": "^18.2.15",
    "@typescript-eslint/eslint-plugin": "^6.10.0",
    "@typescript-eslint/parser": "^6.10.0",
    "@vitejs/plugin-react": "^4.1.1",
    "autoprefixer": "^10.4.16",
    "eslint": "^8.53.0",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.4",
    "postcss": "^8.4.31",
    "tailwindcss": "^3.3.5",
    "typescript": "^5.2.2",
    "vite": "^5.0.0",
    "vitest": "^0.34.6",
    "@testing-library/react": "^13.4.0",
    "@testing-library/jest-dom": "^6.1.4",
    "@testing-library/user-event": "^14.5.1"
  }
}