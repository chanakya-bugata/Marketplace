generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum VendorStatus {
  PENDING
  APPROVED
  REJECTED
  SUSPENDED
}

enum ProductStatus {
  DRAFT
  ACTIVE
  INACTIVE
  OUT_OF_STOCK
}

model Vendor {
  id           String       @id @default(cuid())
  userId       String       @unique
  businessName String
  description  String?
  status       VendorStatus @default(PENDING)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  products Product[]

  @@map("vendors")
}

model Category {
  id        String   @id @default(cuid())
  name      String
  slug      String   @unique
  parentId  String?
  createdAt DateTime @default(now())

  parent   Category?  @relation("CategoryHierarchy", fields: [parentId], references: [id])
  children Category[] @relation("CategoryHierarchy")
  products Product[]

  @@map("categories")
}

model Product {
  id            String        @id @default(cuid())
  vendorId      String
  categoryId    String?
  name          String
  description   String?
  price         Decimal       @db.Decimal(10, 2)
  stockQuantity Int           @default(0)
  status        ProductStatus @default(DRAFT)
  images        String[]
  sku           String        @unique
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  vendor   Vendor    @relation(fields: [vendorId], references: [id], onDelete: Cascade)
  category Category? @relation(fields: [categoryId], references: [id])
  variants ProductVariant[]

  @@map("products")
}

model ProductVariant {
  id            String  @id @default(cuid())
  productId     String
  name          String
  value         String
  price         Decimal @db.Decimal(10, 2)
  stockQuantity Int     @default(0)
  sku           String  @unique

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("product_variants")
}